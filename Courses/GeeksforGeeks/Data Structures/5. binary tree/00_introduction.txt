A tree is a popular data structure which is non linear in nature. 
    Unlike other data structures like array, stack, queue, and linked list
    that are linear in nature, a tree represents hierarchical structure. 
    The ordering information of tree is not important. 
    A tree contains nodes and 2 pointers. 
    These two pointers are the left child and the right child of the parent node. 
    Let us understand the terms of tree in detail.

Root: The root of a tree is the top most node of the tree that has no parent node. 
    There is only one root node in every tree.
Edge: Edge acts as a link between the parent node and the child node.
Leaf: A node that has no child is known as the leaf node. 
    It is the last node of the tree. There can be multiple leaf nodes in a tree.
Depth: Depth of the node is the distance from the root node to that particular node.
Height: The height of the node is the distance from that node to the deepest node 
    of the tree.
Height of tree: Height of the tree is the maximum height of any node.

Properties:
1) The maximum number of nodes at level ‘l’ of a binary tree is 2^l. 
2) The Maximum number of nodes in a binary tree of height ‘h’ is 2^h – 1. 
3) In a Binary Tree with N nodes, 
    minimum possible height or the minimum number of levels is Log2(N+1).
4) A Binary Tree with L leaves has at least | Log2L |+ 1   levels. 
5) In Binary tree where every node has 0 or 2 children, 
    the number of leaf nodes is always one more than nodes with two children.
