The more important attributes of an ndarray object are:
a. ndarray.ndim
    the number of axes (dimensions) of the array.
b. ndarray.shape
    the dimensions of the array. 
    This is a tuple of integers indicating the size of the array in each dimension.
    For a matrix with n rows and m columns, shape will be (n,m).
    The length of the shape tuple is therefore the number of axes, ndim.
c. ndarray.size
    the total number of elements of the array.
    This is equal to the product of the elements of shape.
d. ndarray.dtype
    an object describing the type of the elements in the array. 
    One can create or specify dtype’s using standard Python types. 
    Additionally NumPy provides types of its own. 
    examples:
        numpy.int32, numpy.int16, and numpy.float64
e. ndarray.itemsize
    the size in bytes of each element of the array. 
    example:
        an array of elements of type float64 has itemsize 8 (=64/8),
        while one of type complex32 has itemsize 4 (=32/8).
        an array of elements of type int32 has itemize 4 (=32/8)
    It is equivalent to ndarray.dtype.itemize.
f. ndarray.data
    the buffer containing the actual elements of the array. 
    Normally, we won’t need to use this attribute because we will access the elements in an array using indexing facilities.