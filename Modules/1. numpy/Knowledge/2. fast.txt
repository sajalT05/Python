Q. Why is NumPy Fast?
A. Vectorization describes the absence of any explicit looping, indexing, etc., 
    in the code these things are taking place, of course, just “behind the scenes” 
    in optimized, pre-compiled C code. 

Vectorized code has many advantages, among which are:
    • vectorized code is more concise and easier to read
    • fewer lines of code generally means fewer bugs
    • the code more closely resembles standard mathematical notation 
        (making it easier, typically, to correctly code mathematical constructs)
    • vectorization results in more “Pythonic” code. Without vectorization, our 
        code would be littered with inefficient and difficult to read for loops.
...

Broadcasting: the implicit element-by-element behavior of operations;  
                generally speaking, in NumPy all operations, not just arithmetic 
                operations, but logical, bit-wise, functional, etc., 
                behave in this implicit element-by-element fashion, 
                i.e., they broadcast.

c = a * b

Moreover, in the example above,a and b could be:
    a. multidimensional
    b. arrays of the same shape, 
    c. or a scalar and an array, 
    d. or even two arrays of with different shapes, 
        i.  provided that the smaller array is “expandable” to the shape of the 
        ii. larger in such a way that the resulting broadcast is unambiguous.
