// for form submission, create context dictionary
    a. variable context to page method: [pageContext]
// after,
    def PageViewMethod(request):
-->
# add variable to form submission
pageContext={
        # 'key': 'value'
    }


// add context to render viewsFunctionName
// in,
    return render(request, 'pageName.html')
-->
    return render(request, 'pageName.html',pageContext)



---->
def PageViewMethod(request):
    # add variable to form submission
    pageContext={
            # 'key': 'value'
    }
    # change form page method: [form]
    # variableName = request.POST['form_field_name']
    # databaeObject=models.DatabaseClass(column_name=variableName)
        #  if a post is made, then the data is saved in the database    
        if request.method == 'POST':
            # get the data from the form
            # handle form
            titleForm=request.POST['form_title']
            # print database fields in terminal
            # print(variableName)
            # save the data in the database
            # create a new object of the class Database
            # databaseObject=models.DatabaseClass(column_name=variableName)
            databaeObject=models.DatabaseClass(column_name=variableName)
            # save the object in the database
            databaseObject.save()
            # change context
            pageContext={
            # 'key': 'value'
            }
            # return success message in terminal
            print("data has been added in the database")
        return render(request, 'pageName.html',pageContext)